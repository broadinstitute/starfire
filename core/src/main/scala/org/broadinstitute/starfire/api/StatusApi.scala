/**
 * FireCloud
 * Genome analysis execution service. 
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.broadinstitute.starfire.api

import org.broadinstitute.starfire.model.SystemStatus
import org.broadinstitute.starfire.model.SystemStatus._

import sttp.client._
import sttp.client.circe._
import io.circe.generic.auto._

import io.swagger.sttp.utils.Decoders._
import io.swagger.sttp.utils.Encoders._
import io.swagger.sttp.utils.SttpUtils.Implicits._

object StatusApi {

  /**
   * An error status endpoint for load balancing purposes 
   * 
   *
   * @return Option[io.circe.Json]
   */
  def error(
    ): Request[Either[ResponseError[io.circe.Error],io.circe.Json],Nothing] = {

    basicRequest
      .get(uri"https://api.firecloud.org/error")
      .response(asJson[io.circe.Json])
  }

  /**
   * A health status endpoint for load balancing purposes 
   * 
   *
   * @return Option[io.circe.Json]
   */
  def health(
    ): Request[Either[ResponseError[io.circe.Error],io.circe.Json],Nothing] = {

    basicRequest
      .get(uri"https://api.firecloud.org/health")
      .response(asJson[io.circe.Json])
  }

  /**
   * An orchestrated status check that includes a health report of underlying systems 
   * 
   *
   * @return Option[SystemStatus]
   */
  def status(
    ): Request[Either[ResponseError[io.circe.Error],SystemStatus],Nothing] = {

    basicRequest
      .get(uri"https://api.firecloud.org/status")
      .response(asJson[SystemStatus])
  }

}

